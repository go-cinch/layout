syntax = "proto3";

package helloworld.v1;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
// the validate rules:
// https://github.com/envoyproxy/protoc-gen-validate
import "validate/validate.proto";

option go_package = "github.com/go-cinch/layout/api/helloworld/v1;v1";
option java_multiple_files = true;
option java_package = "helloworld.v1";
option java_outer_classname = "HelloworldProtoV1";

// The helloworld service definition.
service Helloworld {
  rpc CreateGreeter (CreateGreeterRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/greeter"
      body: "*"
    };
  }
  rpc GetGreeter (GetGreeterRequest) returns (GetGreeterReply) {
    option (google.api.http) = {
      get: "/greeter/{id}"
    };
  }
  rpc FindGreeter (FindGreeterRequest) returns (FindGreeterReply) {
    option (google.api.http) = {
      get: "/greeter"
    };
  }
  rpc UpdateGreeter (UpdateGreeterRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      put: "/greeter/{id}"
      body: "*",
      additional_bindings {
        patch: "/greeter/{id}",
        body: "*",
      }
    };
  }
  rpc DeleteGreeter (IdsRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/greeter/{ids}"
    };
  }
}

message Page {
  uint64 num = 1;
  uint64 size = 2;
  int64 total = 3;
  bool disable = 4;
}

message IdsRequest {
  string ids = 1;
}

message Greeter {
  uint64 id = 1;
  string name = 2;
  int32 age = 3;
}

message CreateGreeterRequest {
  string name = 1 [(validate.rules).string = {min_len: 2, max_len: 50}]; // the name of string must be between 2 and 50 character
  int32 age = 2 [(validate.rules).int32 = {gte: 0}];                     // the age of int32 must be >= 0
}

message GetGreeterRequest {
  uint64 id = 1;
}

message GetGreeterReply {
  uint64 id = 1;
  string name = 2;
  int32 age = 3;
}

message FindGreeterRequest {
  Page page = 1;
  optional string name = 2;
  optional int32 age = 3;
}

message FindGreeterReply {
  Page page = 1;
  repeated Greeter list = 2;
}

message UpdateGreeterRequest {
  uint64 id = 1;
  optional string name = 2 [(validate.rules).string = {min_len: 2, max_len: 50}]; // the name of string must be between 2 and 50 character
  optional int32 age = 3 [(validate.rules).int32 = {gte: 0}];                     // the age of int32 must be >= 0
}
